{"version":3,"sources":["config/index.js","context/AuthContext.js","context/createDataContext.js","components/Pages/Confirmation/index.js","App.js","serviceWorker.js","client/index.js","redux/appCreateInfo/appDetails.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["PLATFORM_ID","SOURCE_APP_SPEC_ID","TYPE_CUSTOMER_ID","TYPE_USER_TYPE_ID","TYPE_SCREEN_ID","TYPE_INFO_TYPE_ID","TYPE_DESCRIPTION_ID","CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID","CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","UPDATE_APP_FOR_APP_SPEC_ACTION_ID","UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID","UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","DELETE_APP_FOR_APP_SPEC_ACTION_ID","DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID","DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID","DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID","ADD_HAS_PARENT_FOR_PARENT_ACTION_ID","CREATE_APP_FOR_APP_SPEC_ACTION_ID","createDateContext","state","actions","type","userLoggedIn","payload","loginUser","dispatch","userFlag","userLoggedin","console","log","localStorage","setItem","logoutUser","removeItem","Context","Provider","reducer","initialState","createContext","children","useReducer","boundActions","key","value","Confirmation","className","style","margin","marginTop","maxWidth","backgroundColor","borderRadius","marginBottom","alt","width","src","textAlign","AppFooter","React","lazy","Home","AppHeader","Staging","Contact","Pricing","privacyPolicy","underConstruction","termsAndConditions","TempVideo","Schedule","App","childRef","useRef","Suspense","path","fallback","basename","process","exact","noAction","onSignUp","current","modalHandlerRegistration","ref","component","render","props","isLocalhost","Boolean","window","location","hostname","match","authLink","createAuthLink","link","ApolloLink","from","httpLink","ApolloClient","cache","InMemoryCache","dataIdFromObject","object","id","__typename","v4","INITIAL_STATE","appTitle","description","userType","appName","screenName","subTypeInfo","appDetailsReducer","action","combineReducers","appDetails","middlewares","logger","store","createStore","rootReducer","applyMiddleware","tagManagerArgs","gtmId","js","Date","TagManager","initialize","ReactDOM","AuthContext","client","platformId","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aea15612.chunk.js","sourcesContent":["/*\n  This file was generated automatically by nostack 'makecode' for the app 'pivotate3'.\n  If you build a new stack from a template, this version will probably need to change.\n\n  For instance, it will update if you run 'makecode' again. Fair warning, that will\n  change a lot of your code. If you modify your current stack to add actions, sources,\n  or types, it would make sense to add constants here.\n\n  But, you should *not* add permanent, separate configuration material or other material that is not directly\n  'managed by NoStack, because this will will be replaced with every call to 'makecode'.\n */\n\n// stack id\nexport const PLATFORM_ID = 'us-east-1_IDHU1YQ1O';\n\n// sources\nexport const SOURCE_APP_SPEC_ID = 'e36aa4c6-8029-4969-b1fe-d659bdb9eb42';\nexport const SOURCE_PARENT_ID = '2bb38a1e-6802-4aa6-8c23-2ae8a7f1fe08';\n\n// types\nexport const TYPE_MODERATOR_ID = 'us-east-1_IDHU1YQ1OmoderatorClass';\nexport const TYPE_CUSTOMER_ID = 'ba6509d6-8867-4991-9cfd-df407d44f0f1';\nexport const TYPE_APP_ID = '32befb94-af56-4817-b5ae-47741bf0b5d5';\nexport const TYPE_USER_TYPE_ID = '1b0a1e97-32a8-41ed-946a-d33c6560f4d2';\nexport const TYPE_SCREEN_ID = '6ee096cc-1d66-42e1-ae8e-be0cbdcb2bf5';\nexport const TYPE_INFO_TYPE_ID = '49200929-013e-4196-b13b-bbfec87c3efb';\nexport const TYPE_DESCRIPTION_ID = '1f2a35d2-0757-424b-b610-1eabec184fca';\n\n// actions\n// CREATE_INSTANCE\nexport const CREATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID =\n  '53a02af0-eaeb-40d5-84f3-cfe8cf9d23c1';\nexport const CREATE_SCREEN_FOR_APP_SPEC_ACTION_ID =\n  'b79bf571-e364-40c4-bb48-3765d884161d';\nexport const CREATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID =\n  'a2962d65-f87b-47ee-8ff8-18f5e3650e69';\nexport const CREATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID =\n  'b75bff3e-2090-4dd3-b076-c69e0ba5b467';\n\n// UPDATE_INSTANCE\nexport const UPDATE_APP_FOR_APP_SPEC_ACTION_ID =\n  '45a09731-793f-4b87-82bd-f6363546c191';\nexport const UPDATE_USER_TYPE_FOR_APP_SPEC_ACTION_ID =\n  'fa9dd57a-6103-40be-8751-3421d120b3da';\nexport const UPDATE_SCREEN_FOR_APP_SPEC_ACTION_ID =\n  'feeb9777-0538-4f3a-8bbe-a907e84667ba';\nexport const UPDATE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID =\n  'c822a81e-a4ac-4e9a-9aab-9f59f777276a';\nexport const UPDATE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID =\n  '2462c9aa-f377-48c0-9126-e52599c82f4a';\nexport const UPDATE_SCREEN_FOR_PARENT_ACTION_ID =\n  '1c0d97b9-d0d7-4b8b-81a3-2c22b06768bc';\n\n// DELETE_INSTANCE\nexport const DELETE_APP_FOR_APP_SPEC_ACTION_ID =\n  '9ad7799b-5946-4039-a8c9-e7e7395668ae';\nexport const DELETE_USER_TYPE_FOR_APP_SPEC_ACTION_ID =\n  'd399ef81-c0f0-495e-95f8-f63f132e2b28';\nexport const DELETE_SCREEN_FOR_APP_SPEC_ACTION_ID =\n  '7496f085-7d3c-4739-b83d-de6efbcdcbd3';\nexport const DELETE_INFO_TYPE_FOR_APP_SPEC_ACTION_ID =\n  '7f3d7add-28ec-4447-a91b-46b88b3203ee';\nexport const DELETE_DESCRIPTION_FOR_APP_SPEC_ACTION_ID =\n  '5e072d38-9314-4a2f-b3b2-476a0c89d288';\nexport const DELETE_SCREEN_FOR_PARENT_ACTION_ID =\n  '9949b22f-6e70-4346-b183-a53858cbe8a6';\n\n// ADD_INSTANCE_ASSN\nexport const ADD_HAS_PARENT_FOR_PARENT_ACTION_ID =\n  '482d8179-eb4b-494b-80bc-02c1b8c43eef';\n\n// UPDATE_INSTANCE_ASSN\nexport const UPDATE_HAS_PARENT_FOR_PARENT_ACTION_ID =\n  '086a5506-1da2-48da-901a-2ee8a5b3bacc';\n\n// DELETE_INSTANCE_ASSN\nexport const DELETE_HAS_PARENT_FOR_PARENT_ACTION_ID =\n  '3178abb9-757a-4849-a33b-0ad892b57a63';\n\n// CREATE_INSTANCE_WITH_UNOWNED_PARENT\nexport const CREATE_APP_FOR_APP_SPEC_ACTION_ID =\n  '955e751c-cb97-4383-9eb3-eb4b9bc4e04e';\nexport const CREATE_SCREEN_FOR_PARENT_ACTION_ID =\n  '7287f58b-e9b6-4107-9c0d-76b6e6fcb17a';\n","import createDateContext from './createDataContext';\n\nconst authReducer = (state, actions) => {\n  switch (actions.type) {\n    case 'login':\n      return { userLoggedIn: actions.payload };\n    case 'logout':\n      return { userLoggedIn: actions.payload };\n    default:\n      return state;\n  }\n};\n\nconst loginUser = (dispatch) => (userFlag) => {\n  let userLoggedin = true;\n  if (userFlag < 0) userLoggedin = false;\n  console.log(userLoggedin);\n  localStorage.setItem('userFlag', true);\n  dispatch({ type: 'login', payload: true });\n};\n\nconst logoutUser = (dispatch) => () => {\n  localStorage.removeItem('userFlag');\n  dispatch({ type: 'logout', payload: false });\n};\n\nexport const { Context, Provider } = createDateContext(\n  authReducer,\n  { loginUser, logoutUser },\n  { userLoggedIn: false }\n);\n","import React, { createContext, useReducer } from 'react';\n\nexport default (reducer, actions, initialState) => {\n  const Context = createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const boundActions = {};\n    for (const key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n  return { Context, Provider };\n};\n","import React from 'react';\n\nconst Confirmation = () => {\n  return (\n    <div className='text-center container full-width'>\n      <div\n        style={{\n          margin: 'auto',\n          marginTop: '100px',\n          maxWidth: '769px',\n          backgroundColor: '#ffffff',\n          borderRadius: '10px',\n          marginBottom: '100px',\n        }}\n      >\n        <img\n          alt='Banner'\n          style={{ width: '100%' }}\n          src='https://pivotatestaticassets.com/images/Banner.jpg'\n        />\n        <p style={{ textAlign: 'center' }}>\n          <br />\n          <br />\n          <h3 className='c0'>\n            Your Meeting is Confirmed! We’ll be talking soon.\n          </h3>\n          <h4>Check your email for details.</h4>\n        </p>\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default Confirmation;\n","/* eslint-disable react/jsx-wrap-multilines */\nimport React, { useRef } from 'react';\nimport './scss/style.scss';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport ScrollToTop from 'react-router-scroll-top';\nimport Confirmation from './components/Pages/Confirmation';\n\nconst AppFooter = React.lazy(() => import('./components/AppFooter'));\nconst Home = React.lazy(() => import('./components/Pages/Home'));\nconst AppHeader = React.lazy(() => import('./components/AppHeader'));\nconst Staging = React.lazy(() => import('./components/Pages/Staging'));\nconst Contact = React.lazy(() => import('./components/Pages/Contact'));\nconst Pricing = React.lazy(() => import('./components/Pages/Pricing'));\nconst privacyPolicy = React.lazy(() =>\n  import('./components/Pages/Privacy-policy')\n);\n// const confirmation = React.lazy(() => import('./components/Pages/Confirmation'))\nconst underConstruction = React.lazy(() =>\n  import('./components/Pages/Under-construction')\n);\nconst termsAndConditions = React.lazy(() =>\n  import('./components/Pages/Terms-and-conditions')\n);\nconst TempVideo = React.lazy(() => import('./components/Pages/Temp-video'));\nconst Schedule = React.lazy(() => import('./components/Pages/Schedule'));\n\n\nconst App = () => {\n  const childRef = useRef();\n\n  return (\n    <React.Suspense\n      path='/'\n      fallback={\n        <section className=''>\n          <div className='container full-width'>\n            <div className='flex flex-wrap items-center'>\n              <div className='hero__header'>\n                <div className='hero__text'>\n                  <strong />\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      }\n    >\n      <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n        <ScrollToTop>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/confirmation`}>\n              <AppHeader noAction />\n              <Confirmation />\n              <AppFooter noAction />\n            </Route>\n            <Route exact path={`${process.env.PUBLIC_URL}/tempvideo`}>\n              <AppHeader noAction />\n              <TempVideo />\n              <AppFooter noAction />\n            </Route>\n            <Route exact path={`${process.env.PUBLIC_URL}/staging`}>\n              <Staging\n                onSignUp={() => childRef.current.modalHandlerRegistration()}\n              />\n            </Route>\n\n            <Route exact path={`${process.env.PUBLIC_URL}/schedule`}>\n              <AppHeader />\n              <Schedule />\n              <AppFooter noAction />\n            </Route>\n            <Route\n              exact\n              path={[\n                `${process.env.PUBLIC_URL}/`,\n                `${process.env.PUBLIC_URL}/pricing`,\n                `${process.env.PUBLIC_URL}/under-construction`,\n                `${process.env.PUBLIC_URL}/privacy-policy`,\n                `${process.env.PUBLIC_URL}/terms-and-conditions`,\n                `${process.env.PUBLIC_URL}/contact`,\n                `${process.env.PUBLIC_URL}/schedule`,\n                `${process.env.PUBLIC_URL}/meeting-step/create-user-type`,\n                `${process.env.PUBLIC_URL}/meeting-step/job-seeker`,\n              ]}\n            >\n              <AppHeader ref={childRef} />\n              {/* main */}\n              <Route exact path={`${process.env.PUBLIC_URL}/`}>\n                <Home\n                  onSignUp={() => childRef.current.modalHandlerRegistration()}\n                />\n              </Route>\n\n\n              <Route\n                exact\n                path={`${process.env.PUBLIC_URL}/contact`}\n                component={Contact}\n              />\n              <Route exact path={`${process.env.PUBLIC_URL}/pricing`} />\n\n              <Route\n                path={`${process.env.PUBLIC_URL}/pricing`}\n                render={(props) => (\n                  <Pricing\n                    onSignUp={() => childRef.current.modalHandlerRegistration()}\n                    // eslint-disable-next-line react/jsx-props-no-spreading\n                    {...props}\n                  />\n                )}\n              />\n\n              <Route\n                path={`${process.env.PUBLIC_URL}/under-construction`}\n                component={underConstruction}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/privacy-policy`}\n                component={privacyPolicy}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/terms-and-conditions`}\n                component={termsAndConditions}\n              />\n\n              <AppFooter\n                onSignUp={() => childRef.current.modalHandlerRegistration()}\n              />\n              {/* main end */}\n            </Route>\n            <Route component={underConstruction} />\n          </Switch>\n        </ScrollToTop>\n      </BrowserRouter>\n    </React.Suspense>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === \"[::1]\" ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nconsole.log(isLocalhost)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      const swUrl = ``;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { v4 } from 'uuid';\n\nimport { createAuthLink, httpLink } from '@nostack/no-stack';\n\nimport { PLATFORM_ID } from '../config';\n\nconst authLink = createAuthLink(PLATFORM_ID);\n\nconst link = ApolloLink.from([authLink, httpLink]);\n\nexport default new ApolloClient({\n  link,\n  cache: new InMemoryCache({\n    dataIdFromObject: (object) =>\n      // eslint-disable-next-line no-underscore-dangle\n      object.id ? object.id + object.__typename : v4(),\n  }),\n});\n","const INITIAL_STATE = {\n  appTitle: \"\",\n  description: \"\",\n  userType: \"\",\n  appName: \"\",\n  screenName: \"\",\n  subTypeInfo: \"\",\n\n};\nconst appDetailsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n      case 'add_app_name':\n          return {...state, appName: action.payload}\n      case 'add_app_description':\n          return {...state, description: action.payload}\n      case 'add_user_type':\n          return {...state, userType: action.payload}\n      default: \n      return state;\n  }\n};\n\n\nexport default appDetailsReducer;","import { combineReducers } from 'redux';\n\nimport appDetailsReducer from './appCreateInfo/appDetails.reducer';\n\nexport default combineReducers({\n  appDetails: appDetailsReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NoStackProvider } from '@nostack/no-stack';\n\nimport { PLATFORM_ID } from './config';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport client from './client';\n\nimport TagManager from 'react-gtm-module';\n\nimport { Provider } from 'react-redux';\nimport { Provider as AuthContext } from './context/AuthContext';\nimport store from './redux/store';\nconst tagManagerArgs = {\n  gtmId: 'GTM-TS3Q48S',\n  js: new Date(),\n};\n\nTagManager.initialize(tagManagerArgs);\n\nReactDOM.render(\n  <Provider store={store}>\n    <AuthContext>\n      <NoStackProvider client={client} platformId={PLATFORM_ID}>\n        <App />\n      </NoStackProvider>\n    </AuthContext>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}